{
	"name": "Movies_CategoryRatings_Tables",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Movies",
						"type": "DatasetReference"
					},
					"name": "sourceMovies"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsCategories",
						"type": "DatasetReference"
					},
					"name": "sinkDimCategories"
				},
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTableDimRatings",
						"type": "DatasetReference"
					},
					"name": "sinkDimRatings"
				}
			],
			"transformations": [
				{
					"name": "aggregateRatings"
				},
				{
					"name": "aggregateCategories"
				},
				{
					"name": "filter1"
				},
				{
					"name": "filter2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Actor as string,",
				"          AvailabilityDate as date,",
				"          AvailabilityYear as short,",
				"          Genre as string,",
				"          MovieGenre as string,",
				"          MovieID as string,",
				"          MovieRating as string,",
				"          MovieTier as short,",
				"          MovieTitle as string,",
				"          Rating as string,",
				"          SourceID as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> sourceMovies",
				"sourceMovies aggregate(groupBy(Rating),",
				"     count = count()) ~> aggregateRatings",
				"sourceMovies aggregate(groupBy(Genre),",
				"     count = count()) ~> aggregateCategories",
				"aggregateRatings filter(!isNull(Rating)) ~> filter1",
				"aggregateCategories filter(!isNull(Genre)) ~> filter2",
				"filter2 sink(allowSchemaDrift: false,",
				"     validateSchema: true,",
				"     input(",
				"          MovieCategorySK as integer,",
				"          MovieCategoryDescription as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          MovieCategoryDescription = Genre",
				"     )) ~> sinkDimCategories",
				"filter1 sink(allowSchemaDrift: false,",
				"     validateSchema: true,",
				"     input(",
				"          MovieRatingSK as integer,",
				"          MovieRatingDescription as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          MovieRatingDescription = Rating",
				"     )) ~> sinkDimRatings"
			]
		}
	}
}